name: Release Stencil
on:
  push:
    tags:
      - "v*.*.*"

jobs:
  create-release:
    name: create release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  add-stencil-server-artifacts:
    name: release linux/amd64
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goarch: arm64
            goos: windows
    steps:
      - uses: actions/checkout@v2
      - uses: wangyoucao577/go-release-action@v1.17
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          project_path: ./
  publish-java-client:
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 8
      - name: Publish java client
        run: |
          printf "$GPG_SIGNING_KEY" | base64 --decode > private.key
          ./gradlew clean publishToSonatype closeAndReleaseSonatypeStagingRepository -Psigning.keyId=${GPG_SIGNING_KEY_ID} -Psigning.password=${GPG_SIGNING_PASSWORD} -Psigning.secretKeyRingFile=private.key --console=verbose
        working-directory: clients/java
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
          GPG_SIGNING_KEY_ID: ${{ secrets.GPG_SIGNING_KEY_ID }}
          GPG_SIGNING_PASSWORD: ${{ secrets.GPG_SIGNING_PASSWORD }}
  publish-js-client:
    runs-on: ubuntu-latest
    needs: create-release
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '12.x'
        registry-url: 'https://registry.npmjs.org'
        scope: '@odpf'
    - run: npm install
      working-directory: clients/js
    - run: npm publish --access public
      working-directory: clients/js
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  publish-ruby-client:
    runs-on: ubuntu-latest
    needs: create-release
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby 2.6
        uses: ruby/setup-ruby@477b21f02be01bcb8030d50f37cfec92bfa615b6
        with:
          ruby-version: 2.6
      - run: bundle install
        working-directory: clients/ruby
      - name: Publish to RubyGems
        run: |
          mkdir -p $HOME/.gem
          touch $HOME/.gem/credentials
          chmod 0600 $HOME/.gem/credentials
          printf -- "---\n:rubygems_api_key: ${GEM_HOST_API_KEY}\n" > $HOME/.gem/credentials
          gem build *.gemspec
          gem push *.gem
        env:
          GEM_HOST_API_KEY: "${{secrets.RUBYGEMS_AUTH_TOKEN}}"
        working-directory: clients/ruby
  publish-server:
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - uses: actions/checkout@v2
      - name: Get release tag
        id: get_version
        uses: battila7/get-version-action@v2
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            docker.pkg.github.com/${{ github.repository }}/stencil:latest
            docker.pkg.github.com/${{ github.repository }}/stencil:${{ steps.get_version.outputs.version-without-v }}
            odpf/stencil:latest
            odpf/stencil:${{ steps.get_version.outputs.version-without-v }}

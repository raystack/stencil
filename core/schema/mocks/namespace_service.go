// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	context "context"

	namespace "github.com/odpf/stencil/core/namespace"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// NamespaceService is an autogenerated mock type for the NamespaceService type
type NamespaceService struct {
	mock.Mock
}

// Get provides a mock function with given fields: ctx, name
func (_m *NamespaceService) Get(ctx context.Context, name string) (namespace.Namespace, error) {
	ret := _m.Called(ctx, name)

	var r0 namespace.Namespace
	if rf, ok := ret.Get(0).(func(context.Context, string) namespace.Namespace); ok {
		r0 = rf(ctx, name)
	} else {
		r0 = ret.Get(0).(namespace.Namespace)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewNamespaceService creates a new instance of NamespaceService. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewNamespaceService(t testing.TB) *NamespaceService {
	mock := &NamespaceService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
